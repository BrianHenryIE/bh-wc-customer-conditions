name: Integration

# Runs integration tests.
#
# vendor/bin/codecept run integration
#
# @author BrianHenryIE

on: ["push"]

jobs:

  integration:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        php: [ '7.4' ]

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      # Fails here when pages branch does not exist.

      - name: Checkout GitHub Pages branch for code coverage report
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: tests/_output/html

      - name: Install PHP
        uses: shivammathur/setup-php@2.11.0
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug
          tools: composer
          extensions: zip

      - name: Read .env.testing
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env.testing

      - name: Read .env.github
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env.github

      - name: Set env database host w/port
        run: echo "TEST_SITE_DB_HOST=127.0.0.1:${{ job.services.mysql.ports['3306'] }}" >> $GITHUB_ENV

      - name: Configure MySQL
        run: |
          mysql -h 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -u root -ppassword -e "CREATE USER '"$TEST_DB_USER"'@'%' IDENTIFIED WITH mysql_native_password BY '"$TEST_DB_PASSWORD"';";
          mysql -h 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -u root -ppassword -e "CREATE DATABASE "$TEST_SITE_DB_NAME"; USE "$TEST_SITE_DB_NAME"; GRANT ALL PRIVILEGES ON "$TEST_SITE_DB_NAME".* TO '"$TEST_DB_USER"'@'%';";
          mysql -h 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -u root -ppassword -e "CREATE DATABASE "$TEST_DB_NAME"; USE "$TEST_DB_NAME"; GRANT ALL PRIVILEGES ON "$TEST_DB_NAME".* TO '"$TEST_DB_USER"'@'%';";

      - name: Create Composer auth.json
        run: php -r "file_put_contents( 'auth.json', json_encode( [ 'http-basic' => [ 'blog.brianhenry.ie' => [ 'username' => '"${{ secrets.COMPOSER_AUTH_SECRET }}"', 'password' => 'satispress' ] ] ] ) );"

      - name: Run composer install
        uses: php-actions/composer@v6

      - name: Create wpconfig ... the composer.json creation didn't work
        run: |
          export $(grep -v '^#' .env.testing | xargs);
          sudo vendor/bin/wp config create --dbname=$TEST_SITE_DB_NAME --dbuser=$TEST_SITE_DB_USER --dbpass=$TEST_SITE_DB_PASSWORD --dbhost=127.0.0.1:${{ job.services.mysql.ports['3306'] }} --allow-root

      - name: Update site URL to match GA
        run: |
          vendor/bin/wp option update home 'http://localhost:8080'
          vendor/bin/wp option update siteurl 'http://localhost:8080'

      - name: Run integration tests
        run: vendor/bin/codecept run integration --report
